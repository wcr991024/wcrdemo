<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dt.xd.dao.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="model.User.Product">
    <result column="PRODUCT_ID" jdbcType="VARCHAR" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_info" jdbcType="VARCHAR" property="productInfo" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PRODUCT_ID, product_name, product_info, price, status
  </sql>
  <select id="getCount" parameterType="map"
			resultType="java.lang.Integer">
			select count(*) from product
			<if test="product_name!=null and product_name!=''">
				where product_name like concat('%',#{product_name},'%')
			</if>
		</select>
   <select id="selectByExample"
			parameterType="model.User.ProductExample"
			resultMap="BaseResultMap">
			select
			<if test="distinct">
				distinct
			</if>
			<include refid="Base_Column_List"></include>
			from product
			<if test="_parameter!=null">
				<include refid="Example_Where_Clause"></include>
			</if>
			<if test="product_name!=null and product_name!=''">
				where product_name like concat('%',#{product_name},'%')
			</if>
			<if test="pageStart>=0">
				limit ${pageStart},${pageSize}
			</if>
			<if test="orderByClause">
				order by ${orderByClause}
			</if>
		</select>
		<select id="selectByPrimaryKey"
			parameterType="model.User.ProductExample"
			resultMap="BaseResultMap">
			select
			<if test="distinct">
				distinct
			</if>
			<include refid="Base_Column_List"></include>
			from product
			<if test="_parameter!=null">
				<include refid="Example_Where_Clause"></include>
			</if>
			<if test="product_id!=null and product_id!=''">
				where product_id like concat('%',#{product_id},'%')
			</if>
			<if test="pageStart>=0">
				limit ${pageStart},${pageSize}
			</if>
			<if test="orderByClause">
				order by ${orderByClause}
			</if>
		</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.String">
		delete from product
		where product_id = #{product_id,jdbcType=VARCHAR}
	</delete>
  <delete id="deleteByExample" 
  parameterType="model.User.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.User.Product">
    insert into product (PRODUCT_ID, product_name, product_info, 
      price, status)
    values (#{productId,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{productInfo,jdbcType=VARCHAR}, 
      #{price,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.User.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        PRODUCT_ID,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productInfo != null">
        product_info,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productInfo != null">
        #{productInfo,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" 
  parameterType="model.User.ProductExample" 
  resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByPrimaryKey1"
		parameterType="java.lang.String" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from product
		where product_id = #{product_id,jdbcType=VARCHAR}	
	</select>
  <update id="updateByExample" parameterType="map">
    update product
    set PRODUCT_ID = #{record.productId,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_info = #{record.productInfo,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
   <update id="updateByExample1" parameterType="java.lang.String">
    update product
    set 
      status = #{status,jdbcType=VARCHAR}
  </update>
<!--   <update id="updateByPrimaryKey1" parameterType="com.dt.cn.model.sysUser.Product">
    update product
      product_name = #{productName,jdbcType=VARCHAR},
      product_info = #{productInfo,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
    where product_id = #{productId,jdbcType=VARCHAR}
  </update> -->
</mapper>