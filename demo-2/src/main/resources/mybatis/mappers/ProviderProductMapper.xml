<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.datangedu.cn.dao.mapper.ProviderProductMapper">
  <resultMap id="BaseResultMap" type="com.datangedu.cn.model.ProviderProduct">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="PROVIDER_ID" jdbcType="VARCHAR" property="providerId" />
    <result column="PROVIDER_NAME" jdbcType="VARCHAR" property="providerName" />
    <result column="SERVICE_NAME" jdbcType="VARCHAR" property="serviceName" />
    <result column="SERVICE_INFO" jdbcType="VARCHAR" property="serviceInfo" />
    <result column="SERVICE_IMG" jdbcType="VARCHAR" property="serviceImg" />
    <result column="PRICE" jdbcType="INTEGER" property="price" />
    <result column="sales_volume" jdbcType="INTEGER" property="salesVolume" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="RECOMMEND" jdbcType="INTEGER" property="recommend" />
    <result column="HIGH_QUALITY" jdbcType="INTEGER" property="highQuality" />
    <result column="CREATE_TIME" jdbcType="DATE" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, PROVIDER_ID, PROVIDER_NAME, SERVICE_NAME, SERVICE_INFO, SERVICE_IMG, PRICE, sales_volume, 
    STATUS, RECOMMEND, HIGH_QUALITY, CREATE_TIME
  </sql>
  <!-- start -->
  <select id="selectAllProviderDao"  resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from provider_product
    <!-- <where>
    	1=1
    </where> -->
    <if test="pageSize>0">
    	limit #{pageStart},#{pageSize}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByProviderNameDao" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <!-- <include refid="Update_By_Example_Where_Clause" /> -->
    * from provider_product
    <where>
    	provider_name like CONCAT('%',#{providerName},'%')
    </where>
    <if test="example.pageSize>0">
    	limit #{example.pageStart},#{example.pageSize}
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="countByProviderNameDao" parameterType="java.lang.String"  resultType="java.lang.Integer">
    select
    <!-- <include refid="Update_By_Example_Where_Clause" /> -->
    count(*) from provider_product
    <where>
    	provider_name like CONCAT('%',#{providerName},'%')
    </where>
  </select>
  
  <select id="selectByServiceNameDao" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <!-- <include refid="Update_By_Example_Where_Clause" /> -->
    * from provider_product
    <where>
    	SERVICE_NAME like CONCAT('%',#{serviceName},'%')
    </where>
    <if test="example.pageSize>0">
    	limit #{example.pageStart},#{example.pageSize}
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="countByServiceNameDao" parameterType="java.lang.String"  resultType="java.lang.Integer">
    select
    <!-- <include refid="Update_By_Example_Where_Clause" /> -->
    count(*) from provider_product
    <where>
    	SERVICE_NAME like CONCAT('%',#{serviceName},'%')
    </where>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from provider_product
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="selectPriceByProductId" parameterType="java.lang.String" resultType="java.lang.Integer">
    select price from provider_product
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <!-- end -->
  
  
  <select id="selectByExample" parameterType="com.datangedu.cn.model.ProviderProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from provider_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
 
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from provider_product
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.datangedu.cn.model.ProviderProductExample">
    delete from provider_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.datangedu.cn.model.ProviderProduct">
    insert into provider_product (ID, PROVIDER_ID, PROVIDER_NAME, 
      SERVICE_NAME, SERVICE_INFO, SERVICE_IMG, 
      PRICE, sales_volume, STATUS, 
      RECOMMEND, HIGH_QUALITY, CREATE_TIME
      )
    values (#{id,jdbcType=VARCHAR}, #{providerId,jdbcType=VARCHAR}, #{providerName,jdbcType=VARCHAR}, 
      #{serviceName,jdbcType=VARCHAR}, #{serviceInfo,jdbcType=VARCHAR}, #{serviceImg,jdbcType=VARCHAR}, 
      #{price,jdbcType=INTEGER}, #{salesVolume,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{recommend,jdbcType=INTEGER}, #{highQuality,jdbcType=INTEGER}, #{createTime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.datangedu.cn.model.ProviderProduct">
    insert into provider_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="providerId != null">
        PROVIDER_ID,
      </if>
      <if test="providerName != null">
        PROVIDER_NAME,
      </if>
      <if test="serviceName != null">
        SERVICE_NAME,
      </if>
      <if test="serviceInfo != null">
        SERVICE_INFO,
      </if>
      <if test="serviceImg != null">
        SERVICE_IMG,
      </if>
      <if test="price != null">
        PRICE,
      </if>
      <if test="salesVolume != null">
        sales_volume,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="recommend != null">
        RECOMMEND,
      </if>
      <if test="highQuality != null">
        HIGH_QUALITY,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null">
        #{providerId,jdbcType=VARCHAR},
      </if>
      <if test="providerName != null">
        #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null">
        #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="serviceInfo != null">
        #{serviceInfo,jdbcType=VARCHAR},
      </if>
      <if test="serviceImg != null">
        #{serviceImg,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="salesVolume != null">
        #{salesVolume,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="recommend != null">
        #{recommend,jdbcType=INTEGER},
      </if>
      <if test="highQuality != null">
        #{highQuality,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.datangedu.cn.model.ProviderProductExample" resultType="java.lang.Long">
    select count(*) from provider_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update provider_product
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.providerId != null">
        PROVIDER_ID = #{record.providerId,jdbcType=VARCHAR},
      </if>
      <if test="record.providerName != null">
        PROVIDER_NAME = #{record.providerName,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceName != null">
        SERVICE_NAME = #{record.serviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceInfo != null">
        SERVICE_INFO = #{record.serviceInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceImg != null">
        SERVICE_IMG = #{record.serviceImg,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        PRICE = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.salesVolume != null">
        sales_volume = #{record.salesVolume,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.recommend != null">
        RECOMMEND = #{record.recommend,jdbcType=INTEGER},
      </if>
      <if test="record.highQuality != null">
        HIGH_QUALITY = #{record.highQuality,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update provider_product
    set ID = #{record.id,jdbcType=VARCHAR},
      PROVIDER_ID = #{record.providerId,jdbcType=VARCHAR},
      PROVIDER_NAME = #{record.providerName,jdbcType=VARCHAR},
      SERVICE_NAME = #{record.serviceName,jdbcType=VARCHAR},
      SERVICE_INFO = #{record.serviceInfo,jdbcType=VARCHAR},
      SERVICE_IMG = #{record.serviceImg,jdbcType=VARCHAR},
      PRICE = #{record.price,jdbcType=INTEGER},
      sales_volume = #{record.salesVolume,jdbcType=INTEGER},
      STATUS = #{record.status,jdbcType=INTEGER},
      RECOMMEND = #{record.recommend,jdbcType=INTEGER},
      HIGH_QUALITY = #{record.highQuality,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.datangedu.cn.model.ProviderProduct">
    update provider_product
    <set>
      <if test="providerId != null">
        PROVIDER_ID = #{providerId,jdbcType=VARCHAR},
      </if>
      <if test="providerName != null">
        PROVIDER_NAME = #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null">
        SERVICE_NAME = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="serviceInfo != null">
        SERVICE_INFO = #{serviceInfo,jdbcType=VARCHAR},
      </if>
      <if test="serviceImg != null">
        SERVICE_IMG = #{serviceImg,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        PRICE = #{price,jdbcType=INTEGER},
      </if>
      <if test="salesVolume != null">
        sales_volume = #{salesVolume,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="recommend != null">
        RECOMMEND = #{recommend,jdbcType=INTEGER},
      </if>
      <if test="highQuality != null">
        HIGH_QUALITY = #{highQuality,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=DATE},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.datangedu.cn.model.ProviderProduct">
    update provider_product
    set PROVIDER_ID = #{providerId,jdbcType=VARCHAR},
      PROVIDER_NAME = #{providerName,jdbcType=VARCHAR},
      SERVICE_NAME = #{serviceName,jdbcType=VARCHAR},
      SERVICE_INFO = #{serviceInfo,jdbcType=VARCHAR},
      SERVICE_IMG = #{serviceImg,jdbcType=VARCHAR},
      PRICE = #{price,jdbcType=INTEGER},
      sales_volume = #{salesVolume,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=INTEGER},
      RECOMMEND = #{recommend,jdbcType=INTEGER},
      HIGH_QUALITY = #{highQuality,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=DATE}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>