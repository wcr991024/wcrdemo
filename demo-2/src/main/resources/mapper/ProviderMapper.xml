<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinda.mapper.ProviderMapper" >
  <resultMap id="BaseResultMap" type="com.xinda.model.Provider" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="PROVIDER_INFO" property="providerInfo" jdbcType="VARCHAR" />
    <result column="CELLPHONE" property="cellphone" jdbcType="VARCHAR" />
    <result column="LOGIN_ID" property="loginId" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="PROVIDER_IMG" property="providerImg" jdbcType="VARCHAR" />
    <result column="REGION" property="region" jdbcType="VARCHAR" />
    <result column="REGISTER_TIME" property="registerTime" jdbcType="DATE" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="AUTH_FILE" property="authFile" jdbcType="VARCHAR" />
    <result column="WEIXIN" property="weixin" jdbcType="VARCHAR" />
    <result column="QQ" property="qq" jdbcType="VARCHAR" />
    <result column="WORK_TIME" property="workTime" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="RECOMMEND" property="recommend" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xinda.model.Provider" extends="BaseResultMap" >
    <result column="LOGINIMG" property="loginimg" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, NAME, PROVIDER_INFO, CELLPHONE, LOGIN_ID, PASSWORD, PROVIDER_IMG, REGION, REGISTER_TIME, 
    STATUS, AUTH_FILE, WEIXIN, QQ, WORK_TIME, EMAIL, RECOMMEND
  </sql>
  <sql id="Blob_Column_List" >
    LOGINIMG
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xinda.model.ProviderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from provider
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xinda.model.ProviderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from provider
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from provider
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from provider
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinda.model.ProviderExample" >
    delete from provider
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xinda.model.Provider" >
    insert into provider (ID, NAME, PROVIDER_INFO, 
      CELLPHONE, LOGIN_ID, PASSWORD, 
      PROVIDER_IMG, REGION, REGISTER_TIME, 
      STATUS, AUTH_FILE, WEIXIN, 
      QQ, WORK_TIME, EMAIL, 
      RECOMMEND, LOGINIMG)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{providerInfo,jdbcType=VARCHAR}, 
      #{cellphone,jdbcType=VARCHAR}, #{loginId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{providerImg,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, #{registerTime,jdbcType=DATE}, 
      #{status,jdbcType=INTEGER}, #{authFile,jdbcType=VARCHAR}, #{weixin,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{workTime,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{recommend,jdbcType=INTEGER}, #{loginimg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xinda.model.Provider" >
    insert into provider
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="providerInfo != null" >
        PROVIDER_INFO,
      </if>
      <if test="cellphone != null" >
        CELLPHONE,
      </if>
      <if test="loginId != null" >
        LOGIN_ID,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="providerImg != null" >
        PROVIDER_IMG,
      </if>
      <if test="region != null" >
        REGION,
      </if>
      <if test="registerTime != null" >
        REGISTER_TIME,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="authFile != null" >
        AUTH_FILE,
      </if>
      <if test="weixin != null" >
        WEIXIN,
      </if>
      <if test="qq != null" >
        QQ,
      </if>
      <if test="workTime != null" >
        WORK_TIME,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="recommend != null" >
        RECOMMEND,
      </if>
      <if test="loginimg != null" >
        LOGINIMG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="providerInfo != null" >
        #{providerInfo,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null" >
        #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="loginId != null" >
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="providerImg != null" >
        #{providerImg,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=DATE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="authFile != null" >
        #{authFile,jdbcType=VARCHAR},
      </if>
      <if test="weixin != null" >
        #{weixin,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="workTime != null" >
        #{workTime,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="recommend != null" >
        #{recommend,jdbcType=INTEGER},
      </if>
      <if test="loginimg != null" >
        #{loginimg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinda.model.ProviderExample" resultType="java.lang.Integer" >
    select count(*) from provider
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update provider
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.providerInfo != null" >
        PROVIDER_INFO = #{record.providerInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.cellphone != null" >
        CELLPHONE = #{record.cellphone,jdbcType=VARCHAR},
      </if>
      <if test="record.loginId != null" >
        LOGIN_ID = #{record.loginId,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.providerImg != null" >
        PROVIDER_IMG = #{record.providerImg,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null" >
        REGION = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.registerTime != null" >
        REGISTER_TIME = #{record.registerTime,jdbcType=DATE},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.authFile != null" >
        AUTH_FILE = #{record.authFile,jdbcType=VARCHAR},
      </if>
      <if test="record.weixin != null" >
        WEIXIN = #{record.weixin,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.workTime != null" >
        WORK_TIME = #{record.workTime,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.recommend != null" >
        RECOMMEND = #{record.recommend,jdbcType=INTEGER},
      </if>
      <if test="record.loginimg != null" >
        LOGINIMG = #{record.loginimg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update provider
    set ID = #{record.id,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      PROVIDER_INFO = #{record.providerInfo,jdbcType=VARCHAR},
      CELLPHONE = #{record.cellphone,jdbcType=VARCHAR},
      LOGIN_ID = #{record.loginId,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      PROVIDER_IMG = #{record.providerImg,jdbcType=VARCHAR},
      REGION = #{record.region,jdbcType=VARCHAR},
      REGISTER_TIME = #{record.registerTime,jdbcType=DATE},
      STATUS = #{record.status,jdbcType=INTEGER},
      AUTH_FILE = #{record.authFile,jdbcType=VARCHAR},
      WEIXIN = #{record.weixin,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      WORK_TIME = #{record.workTime,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      RECOMMEND = #{record.recommend,jdbcType=INTEGER},
      LOGINIMG = #{record.loginimg,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update provider
    set ID = #{record.id,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      PROVIDER_INFO = #{record.providerInfo,jdbcType=VARCHAR},
      CELLPHONE = #{record.cellphone,jdbcType=VARCHAR},
      LOGIN_ID = #{record.loginId,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      PROVIDER_IMG = #{record.providerImg,jdbcType=VARCHAR},
      REGION = #{record.region,jdbcType=VARCHAR},
      REGISTER_TIME = #{record.registerTime,jdbcType=DATE},
      STATUS = #{record.status,jdbcType=INTEGER},
      AUTH_FILE = #{record.authFile,jdbcType=VARCHAR},
      WEIXIN = #{record.weixin,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      WORK_TIME = #{record.workTime,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      RECOMMEND = #{record.recommend,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinda.model.Provider" >
    update provider
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="providerInfo != null" >
        PROVIDER_INFO = #{providerInfo,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null" >
        CELLPHONE = #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="loginId != null" >
        LOGIN_ID = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="providerImg != null" >
        PROVIDER_IMG = #{providerImg,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        REGION = #{region,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        REGISTER_TIME = #{registerTime,jdbcType=DATE},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="authFile != null" >
        AUTH_FILE = #{authFile,jdbcType=VARCHAR},
      </if>
      <if test="weixin != null" >
        WEIXIN = #{weixin,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        QQ = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="workTime != null" >
        WORK_TIME = #{workTime,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="recommend != null" >
        RECOMMEND = #{recommend,jdbcType=INTEGER},
      </if>
      <if test="loginimg != null" >
        LOGINIMG = #{loginimg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xinda.model.Provider" >
    update provider
    set NAME = #{name,jdbcType=VARCHAR},
      PROVIDER_INFO = #{providerInfo,jdbcType=VARCHAR},
      CELLPHONE = #{cellphone,jdbcType=VARCHAR},
      LOGIN_ID = #{loginId,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      PROVIDER_IMG = #{providerImg,jdbcType=VARCHAR},
      REGION = #{region,jdbcType=VARCHAR},
      REGISTER_TIME = #{registerTime,jdbcType=DATE},
      STATUS = #{status,jdbcType=INTEGER},
      AUTH_FILE = #{authFile,jdbcType=VARCHAR},
      WEIXIN = #{weixin,jdbcType=VARCHAR},
      QQ = #{qq,jdbcType=VARCHAR},
      WORK_TIME = #{workTime,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      RECOMMEND = #{recommend,jdbcType=INTEGER},
      LOGINIMG = #{loginimg,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinda.model.Provider" >
    update provider
    set NAME = #{name,jdbcType=VARCHAR},
      PROVIDER_INFO = #{providerInfo,jdbcType=VARCHAR},
      CELLPHONE = #{cellphone,jdbcType=VARCHAR},
      LOGIN_ID = #{loginId,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      PROVIDER_IMG = #{providerImg,jdbcType=VARCHAR},
      REGION = #{region,jdbcType=VARCHAR},
      REGISTER_TIME = #{registerTime,jdbcType=DATE},
      STATUS = #{status,jdbcType=INTEGER},
      AUTH_FILE = #{authFile,jdbcType=VARCHAR},
      WEIXIN = #{weixin,jdbcType=VARCHAR},
      QQ = #{qq,jdbcType=VARCHAR},
      WORK_TIME = #{workTime,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      RECOMMEND = #{recommend,jdbcType=INTEGER}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>