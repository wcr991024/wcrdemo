package model.User;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class BusinessOrderExample {
	public int getPageCount() {
		return pageCount;
	}

	public void setPageCount(int pageCount) {
		this.pageCount = pageCount;
	}

	public int getPageStart() {
		return pageStart;
	}

	public void setPageStart(int pageStart) {
		this.pageStart = pageStart;
	}

	public int getPageSize() {
		return pageSize;
	}

	public void setPageSize(int pageSize) {
		this.pageSize = pageSize;
	}

	public String getBusiness_no() {
		return business_no;
	}

	public void setBusiness_no(String business_no) {
		this.business_no = business_no;
	}

	public void setOredCriteria(List<Criteria> oredCriteria) {
		this.oredCriteria = oredCriteria;
	}

	protected int pageCount;
	protected int pageStart;
	protected int pageSize;
	protected String business_no;
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	public BusinessOrderExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("id like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("id not like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<String> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<String> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andBusinessNoIsNull() {
			addCriterion("business_no is null");
			return (Criteria) this;
		}

		public Criteria andBusinessNoIsNotNull() {
			addCriterion("business_no is not null");
			return (Criteria) this;
		}

		public Criteria andBusinessNoEqualTo(String value) {
			addCriterion("business_no =", value, "businessNo");
			return (Criteria) this;
		}

		public Criteria andBusinessNoNotEqualTo(String value) {
			addCriterion("business_no <>", value, "businessNo");
			return (Criteria) this;
		}

		public Criteria andBusinessNoGreaterThan(String value) {
			addCriterion("business_no >", value, "businessNo");
			return (Criteria) this;
		}

		public Criteria andBusinessNoGreaterThanOrEqualTo(String value) {
			addCriterion("business_no >=", value, "businessNo");
			return (Criteria) this;
		}

		public Criteria andBusinessNoLessThan(String value) {
			addCriterion("business_no <", value, "businessNo");
			return (Criteria) this;
		}

		public Criteria andBusinessNoLessThanOrEqualTo(String value) {
			addCriterion("business_no <=", value, "businessNo");
			return (Criteria) this;
		}

		public Criteria andBusinessNoLike(String value) {
			addCriterion("business_no like", value, "businessNo");
			return (Criteria) this;
		}

		public Criteria andBusinessNoNotLike(String value) {
			addCriterion("business_no not like", value, "businessNo");
			return (Criteria) this;
		}

		public Criteria andBusinessNoIn(List<String> values) {
			addCriterion("business_no in", values, "businessNo");
			return (Criteria) this;
		}

		public Criteria andBusinessNoNotIn(List<String> values) {
			addCriterion("business_no not in", values, "businessNo");
			return (Criteria) this;
		}

		public Criteria andBusinessNoBetween(String value1, String value2) {
			addCriterion("business_no between", value1, value2, "businessNo");
			return (Criteria) this;
		}

		public Criteria andBusinessNoNotBetween(String value1, String value2) {
			addCriterion("business_no not between", value1, value2, "businessNo");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("name in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("name not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andOrderInfoIsNull() {
			addCriterion("order_info is null");
			return (Criteria) this;
		}

		public Criteria andOrderInfoIsNotNull() {
			addCriterion("order_info is not null");
			return (Criteria) this;
		}

		public Criteria andOrderInfoEqualTo(String value) {
			addCriterion("order_info =", value, "orderInfo");
			return (Criteria) this;
		}

		public Criteria andOrderInfoNotEqualTo(String value) {
			addCriterion("order_info <>", value, "orderInfo");
			return (Criteria) this;
		}

		public Criteria andOrderInfoGreaterThan(String value) {
			addCriterion("order_info >", value, "orderInfo");
			return (Criteria) this;
		}

		public Criteria andOrderInfoGreaterThanOrEqualTo(String value) {
			addCriterion("order_info >=", value, "orderInfo");
			return (Criteria) this;
		}

		public Criteria andOrderInfoLessThan(String value) {
			addCriterion("order_info <", value, "orderInfo");
			return (Criteria) this;
		}

		public Criteria andOrderInfoLessThanOrEqualTo(String value) {
			addCriterion("order_info <=", value, "orderInfo");
			return (Criteria) this;
		}

		public Criteria andOrderInfoLike(String value) {
			addCriterion("order_info like", value, "orderInfo");
			return (Criteria) this;
		}

		public Criteria andOrderInfoNotLike(String value) {
			addCriterion("order_info not like", value, "orderInfo");
			return (Criteria) this;
		}

		public Criteria andOrderInfoIn(List<String> values) {
			addCriterion("order_info in", values, "orderInfo");
			return (Criteria) this;
		}

		public Criteria andOrderInfoNotIn(List<String> values) {
			addCriterion("order_info not in", values, "orderInfo");
			return (Criteria) this;
		}

		public Criteria andOrderInfoBetween(String value1, String value2) {
			addCriterion("order_info between", value1, value2, "orderInfo");
			return (Criteria) this;
		}

		public Criteria andOrderInfoNotBetween(String value1, String value2) {
			addCriterion("order_info not between", value1, value2, "orderInfo");
			return (Criteria) this;
		}

		public Criteria andOrderPriceIsNull() {
			addCriterion("order_price is null");
			return (Criteria) this;
		}

		public Criteria andOrderPriceIsNotNull() {
			addCriterion("order_price is not null");
			return (Criteria) this;
		}

		public Criteria andOrderPriceEqualTo(Integer value) {
			addCriterion("order_price =", value, "orderPrice");
			return (Criteria) this;
		}

		public Criteria andOrderPriceNotEqualTo(Integer value) {
			addCriterion("order_price <>", value, "orderPrice");
			return (Criteria) this;
		}

		public Criteria andOrderPriceGreaterThan(Integer value) {
			addCriterion("order_price >", value, "orderPrice");
			return (Criteria) this;
		}

		public Criteria andOrderPriceGreaterThanOrEqualTo(Integer value) {
			addCriterion("order_price >=", value, "orderPrice");
			return (Criteria) this;
		}

		public Criteria andOrderPriceLessThan(Integer value) {
			addCriterion("order_price <", value, "orderPrice");
			return (Criteria) this;
		}

		public Criteria andOrderPriceLessThanOrEqualTo(Integer value) {
			addCriterion("order_price <=", value, "orderPrice");
			return (Criteria) this;
		}

		public Criteria andOrderPriceIn(List<Integer> values) {
			addCriterion("order_price in", values, "orderPrice");
			return (Criteria) this;
		}

		public Criteria andOrderPriceNotIn(List<Integer> values) {
			addCriterion("order_price not in", values, "orderPrice");
			return (Criteria) this;
		}

		public Criteria andOrderPriceBetween(Integer value1, Integer value2) {
			addCriterion("order_price between", value1, value2, "orderPrice");
			return (Criteria) this;
		}

		public Criteria andOrderPriceNotBetween(Integer value1, Integer value2) {
			addCriterion("order_price not between", value1, value2, "orderPrice");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("CREATE_TIME is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("CREATE_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_TIME =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_TIME <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("CREATE_TIME >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_TIME >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterionForJDBCDate("CREATE_TIME <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_TIME <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<Date> values) {
			addCriterionForJDBCDate("CREATE_TIME in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("CREATE_TIME not in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_TIME between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_TIME not between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("STATUS is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(Integer value) {
			addCriterion("STATUS =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(Integer value) {
			addCriterion("STATUS <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(Integer value) {
			addCriterion("STATUS >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("STATUS >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(Integer value) {
			addCriterion("STATUS <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(Integer value) {
			addCriterion("STATUS <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<Integer> values) {
			addCriterion("STATUS in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<Integer> values) {
			addCriterion("STATUS not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(Integer value1, Integer value2) {
			addCriterion("STATUS between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(Integer value1, Integer value2) {
			addCriterion("STATUS not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andPayTypeIsNull() {
			addCriterion("PAY_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andPayTypeIsNotNull() {
			addCriterion("PAY_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andPayTypeEqualTo(Integer value) {
			addCriterion("PAY_TYPE =", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeNotEqualTo(Integer value) {
			addCriterion("PAY_TYPE <>", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeGreaterThan(Integer value) {
			addCriterion("PAY_TYPE >", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("PAY_TYPE >=", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeLessThan(Integer value) {
			addCriterion("PAY_TYPE <", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeLessThanOrEqualTo(Integer value) {
			addCriterion("PAY_TYPE <=", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeIn(List<Integer> values) {
			addCriterion("PAY_TYPE in", values, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeNotIn(List<Integer> values) {
			addCriterion("PAY_TYPE not in", values, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeBetween(Integer value1, Integer value2) {
			addCriterion("PAY_TYPE between", value1, value2, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("PAY_TYPE not between", value1, value2, "payType");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table business_order
	 * @mbg.generated  Mon Nov 04 09:46:51 GMT+08:00 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table business_order
     *
     * @mbg.generated do_not_delete_during_merge Mon Nov 04 09:36:58 GMT+08:00 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}